{"name":"Photos in the Cloud","tagline":"Amazon S3 Photo Management Tools","body":"## Overview\r\n\r\nI started this project as a simple Ruby script to upload files to Amazon Simple Storage Service (S3) because I wanted a transparent way to manage a photo collection backed by cloud storage. There are a number of popular photo-sharing websites on the Internet today, but I'm primarily interested in streamlined photo *storage* that allows you to\r\n\r\n- only pay for the resources that you use\r\n- quickly find and download local copies of photos that match a wide variety of criteria\r\n- synchronize local folders with your cloud storage\r\n- eliminate duplicate photos\r\n- easily store and retrieve metadata, including comments\r\n\r\nI haven't found a program or service with all of these features, so I decided to try to write my own. Progress may be slow as this is still just a hobby project for me, but in the meantime I hope that someone else will find it to be useful, either as a tool or as a reference point for learning how to use the Amazon S3 REST API with Ruby.\r\n\r\n## Current Features (version 0.5.0)\r\n\r\n- Upload individual photos named with SHA-1 hashes (like Git)\r\n- Recursively upload all photos in a directory\r\n- Display a progress meter during uploads\r\n\r\n## Planned Features\r\n\r\nSee [TODO.md](TODO.md).\r\n\r\n## FAQ\r\n\r\n### 1. Why Ruby?\r\n\r\nI would eventually like to run these tools on a server somewhere for remote access and sharing purposes. Ruby is a popular language for server-side programs and has a number of robust libraries available for it (such as [Sinatra][sinatra]). Ideally you should be able to run these tools on a cloud platform like Heroku, if you so desire.\r\n\r\n  [sinatra]: http://www.sinatrarb.com/\r\n\r\nI also must admit that I have wanted to learn how to program in Ruby for a long time, and this project seemed like a good excuse to do so.\r\n\r\n### 2. What version of Ruby has this project been tested on?\r\n\r\n1.9.3.\r\n\r\n### 3. What do this project's version numbers mean?\r\n\r\nThis project uses [Semantic Versioning][semver]. I encourage you to read the linked specifications to learn more, but I have provided a brief summary below for convenience.\r\n\r\n> Once you identify your public API, you communicate changes to it with specific increments to your version number. Consider a version format of X.Y.Z (Major.Minor.Patch). Bug fixes not affecting the API increment the patch version, backwards compatible API additions/changes increment the minor version, and backwards incompatible API changes increment the major version.\r\n\r\n  [semver]: http://semver.org/","google":"UA-37777968-3","note":"Don't delete this file! It's used internally to help with page regeneration."}